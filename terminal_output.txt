FlyingMatrices
12th January of 2017
Calculate LandSat NDVI
Assign the input file to variable 
Assign the name of the output file to variable 
Calculating the NDVI applying gdal_calc: command line raster calculator with numpy syntax
0 .. 10 .. 20 .. 30 .. 40 .. 50 .. 60 .. 70 .. 80 .. 90 .. 100 - Done
show some histogram statistics of the NDVI file
Driver: GTiff/GeoTIFF
Files: ndvi.tif
Size is 653, 593
Coordinate System is:
PROJCS["UTM Zone 36, Northern Hemisphere",
    GEOGCS["WGS 84",
        DATUM["unknown",
            SPHEROID["WGS84",6378137,298.257223563]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",33],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]]]
Origin = (829455.000000000000000,843195.000000000000000)
Pixel Size = (30.000000000000000,-30.000000000000000)
Metadata:
  AREA_OR_POINT=Area
Image Structure Metadata:
  INTERLEAVE=BAND
Corner Coordinates:
Upper Left  (  829455.000,  843195.000) ( 35d59' 8.17"E,  7d37' 4.43"N)
Lower Left  (  829455.000,  825405.000) ( 35d59' 4.21"E,  7d27'25.90"N)
Upper Right (  849045.000,  843195.000) ( 36d 9'46.63"E,  7d36'59.90"N)
Lower Right (  849045.000,  825405.000) ( 36d 9'42.43"E,  7d27'21.46"N)
Center      (  839250.000,  834300.000) ( 36d 4'25.36"E,  7d32'12.96"N)
Band 1 Block=653x3 Type=Float32, ColorInterp=Gray
  Minimum=0.157, Maximum=0.908, Mean=0.687, StdDev=0.136
0...10...20...30...40...50...60...70...80...90...100 - done.
  256 buckets from 0.155153 to 0.909519:
  1 0 0 1 1 0 1 0 1 1 1 1 1 0 1 2 1 3 4 2 1 4 3 3 6 2 4 4 9 7 22 2 24 27 25 44 32 44 67 83 48 75 87 103 85 165 98 254 119 240 198 240 190 448 244 196 526 439 93 0 1257 0 119 726 544 290 390 731 514 470 604 667 545 584 566 612 607 935 508 706 520 698 708 1008 856 934 508 718 991 1034 608 1184 1302 291 862 1159 747 1043 1120 1199 1152 641 964 1333 765 1456 758 1251 1249 886 1207 1242 1614 235 2755 91 0 2782 69 2797 338 1735 1421 927 1380 1386 730 1735 1485 935 2231 893 1626 1546 1553 1485 1332 1080 948 1646 1013 1618 1152 1332 1283 1337 1046 1427 1206 1291 2310 0 1524 739 1605 1006 1759 1098 1445 786 1236 1570 1144 1097 1663 1303 1523 1022 979 1392 1737 1375 962 2372 267 2042 1855 1324 2093 1304 2278 1603 1837 2642 2452 1970 3262 1904 3528 4184 714 3980 3820 3482 5394 3008 5714 3932 4236 4385 6381 7122 532 7350 6907 5746 7439 4203 6629 5423 6466 7130 7818 7825 6345 6809 5419 8614 6644 5778 3907 5711 5766 4920 3944 6694 3637 3323 3378 2658 3948 2383 2020 2003 914 686 1076 808 820 473 388 213 218 94 126 62 43 28 19 7 9 2 1 0 0 1 
  NoData Value=1.175494351e-38
  Metadata:
    STATISTICS_MAXIMUM=0.90804594755173
    STATISTICS_MEAN=0.68650394638862
    STATISTICS_MINIMUM=0.15662650763988
    STATISTICS_STDDEV=0.13569862342922
resample 30m x 30m pixelsize NDVI output file to 60m x 60m, using gdalwarp to aggregate the averages of a resoluion using the equals2.tif file
method: average resampling, computes the average of all non-NODATA contributing pixels
Creating output file that is 327P x 297L.
Processing input file ndvi.tif.
Using internal nodata values (e.g. 1.17549e-38) for image ndvi.tif.
Copying nodata values from source ndvi.tif to destination ndvi_averaged_60m.tif.
0...10...20...30...40...50...60...70...80...90...100 - done.
The outputfile of the resampling
reproject resampled file to Lat/long WGS84 using EPSG:4326 code
Creating output file that is 329P x 299L.
Processing input file ndvi_averaged_60m.tif.
Using internal nodata values (e.g. 1.17549e-38) for image ndvi_averaged_60m.tif.
Copying nodata values from source ndvi_averaged_60m.tif to destination ndvi_60m_wgs84.tif.
0...10...20...30...40...50...60...70...80...90...100 - done.
